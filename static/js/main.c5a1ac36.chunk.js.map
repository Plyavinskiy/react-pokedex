{"version":3,"sources":["apiClient.tsx","constants.tsx","features/pokemonsSlice.tsx","features/speciesSlice.tsx","features/store.tsx","assets/puredex-logo.png","components/Header/styles.ts","components/Header/index.tsx","components/Layout/styles.ts","components/Layout/index.tsx","components/Spinner/styles.ts","components/Spinner/index.tsx","styles/globals.tsx","components/PokemonCardWrapper/styles.ts","components/PokemonCardWrapper/index.tsx","utils/formatIndex.tsx","components/PokemonCard/styles.ts","utils/checkPokemonType.tsx","components/Badges/styles.ts","components/Badges/index.tsx","components/PokemonCard/index.tsx","components/SearchBar/styles.ts","components/BackButton/styles.ts","components/BackButton/index.tsx","components/SearchBar/index.tsx","components/InfiniteScroll/styles.ts","components/InfiniteScroll/index.tsx","assets/pikachu.png","components/PokemonAlert/styles.ts","components/PokemonAlert/index.tsx","assets/pokeball.svg","pages/PokemonsListPage/styles.ts","pages/PokemonsListPage/index.tsx","components/PokemonDetailView/styles.ts","components/PokemonDetailView/index.tsx","components/PokemonDetailDescription/styles.ts","components/PokemonDetailDescription/index.tsx","hooks/useIsMounted.ts","hooks/useSafeState.ts","components/ProgressBar/styles.ts","components/ProgressBar/index.tsx","components/PokemonDetailStatistics/styles.ts","components/PokemonDetailStatistics/index.tsx","components/PokemonDetailTab/styles.ts","components/PokemonDetailTab/index.tsx","components/PokemonDetailProfile/styles.ts","components/PokemonDetailProfile/index.tsx","pages/PokemonDetailPage/styles.ts","pages/PokemonDetailPage/index.tsx","App.tsx","index.tsx"],"names":["createApiCall","http","axios","create","baseURL","headers","limit","offset","this","get","data","results","count","name","apiClient","IDLE","LOADING","ERROR","initialState","pokemons","pokemon","hideShowAll","status","error","getPokemonByNameOrId","createAsyncThunk","dispatch","getPokemon","getPokemonByNameOrIdReducer","getPokemons","limits","pokemonList","getMultiplePokemons","entries","push","getPokemonsReducer","condition","_","getState","pokemonsSlice","createSlice","reducers","state","action","payload","length","concat","getPokemonReducer","pokemonId","clearPokemonsReducer","extraReducers","builder","addCase","pending","rejected","fulfilled","actions","selectAllPokemons","selectPokemon","selectCount","selectHideShowAll","selectPokemonsStatus","selectPokemonError","selectPokemonsLength","getPokemonSpecies","species","getPokemonSpeciesReducer","speciesSlice","loading","selectPokemonSpecies","selectPokemonSpeciesLoading","rootReducer","combineReducers","pokemonsReducer","speciesReducer","store","configureStore","reducer","useAppDispatch","useDispatch","Wrapper","styled","div","Image","img","Header","history","useHistory","src","PuredexLogo","alt","onClick","Layout","children","ldsEllipsis1","keyframes","ldsEllipsis2","ldsEllipsis3","Spinner","LdsEllipsisChild","LdsEllipsis","purple","lightGrey","normal","fire","fighting","water","poison","electric","ground","grass","flying","ice","bug","psychic","rock","dragon","ghost","dark","steel","fairy","lightBoxShadow","StyledButton","animated","button","PokemonCardWrapper","click","useState","isHovering","setIsHovering","onMountEffect","useSpring","from","y","to","config","duration","style","onMouseEnter","onMouseLeave","formatIndex","index","toLocaleString","undefined","minimumIntegerDigits","StyledPokemonCardInfo","StyledImage","StyledIndex","checkPokemonType","pokemonType","light","lighten","color","Badge","type","Dot","Badges","typeOne","typeTwo","hasTypeTwo","PokemonCard","sprite","effect","toUpperCase","SearchBar","SearchInput","input","SearchButton","SearchButtonClicked","Back","BackButton","useSelector","showAllHandler","hideShowAllEffect","useTransition","opacity","x","enter","leave","searchButton","Searchbar","pokemonNameOrId","setPokemonNameOrId","pokemonsStatus","placeholder","onChange","event","preventDefault","enteredInput","target","value","onKeyDown","key","toLowerCase","LoadingSpace","InfiniteScroll","callBack","bottomOffset","onEnter","PokemonAlert","Sprite","message","Pikachu","PokemonsListPage","Pokeball","PokemonsListWrapper","setLoading","initLoading","setInitLoading","pokemonError","prevPokemonsLength","useRef","pokemonsList","map","id","sprites","other","front_default","types","getMorePokemons","currentOffset","useEffect","current","View","Name","Index","Round","PokemonDetailView","calc","window","innerWidth","innerHeight","xy","mass","tension","friction","props","set","onMouseMove","clientX","clientY","transform","Description","Label","span","PokemonDetailDescription","TransitionEffect","flavor_text_entries","flavor_text","weight","toFixed","height","capture_rate","base_happiness","habitat","useIsMounted","isMounted","useSafeState","initialValue","setState","useCallback","newValue","ProgressBar","Progress","baseStat","setStyle","setTimeout","newStyle","width","Statistics","table","PokemonDetailStats","statElements","stats","stat","base_stat","Tab","active","PokemonDetailTab","tabName","isActive","Profile","TabsList","Content","PokemonDetailProfile","setActive","changeCurrentTab","parseInt","tabs","component","PokemonDetailStatistics","tabElements","tabContents","Fragment","PokemonDetailPage","setPokemonId","pathname","useLocation","convertedId","replace","pokemonsLength","pokemonItem","useMemo","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5a1ac36.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { IPokemon, ISpecies } from \"@features/types\";\r\n\r\nclass createApiCall {\r\n  http = axios.create({\r\n    baseURL: \"https://pokeapi.co/api/v2/\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  async getMultiplePokemons(\r\n    limit: number,\r\n    offset: number\r\n  ): Promise<{ results: IPokemon[]; count: number }> {\r\n    const { data } = await this.http.get(\r\n      `pokemon?limit=${limit}&&offset=${offset}`\r\n    );\r\n\r\n    return { results: data.results, count: data.count };\r\n  }\r\n\r\n  async getPokemon(name: string | number): Promise<IPokemon> {\r\n    const { data } = await this.http.get(`pokemon/${name}`);\r\n\r\n    return data;\r\n  }\r\n\r\n  async getPokemonSpecies(name: string | number): Promise<ISpecies> {\r\n    const { data } = await this.http.get(`pokemon-species/${name}`);\r\n\r\n    return data;\r\n  }\r\n}\r\n\r\nexport const apiClient = new createApiCall();\r\n","export const FIRST_FETCH_LIMIT = 18;\r\nexport const FIRST_FETCH_OFFSET = 0;\r\nexport const NEXT_FETCH_LIMIT = 9;\r\nexport const INITIAL_RECENT_OFFSET = FIRST_FETCH_LIMIT - NEXT_FETCH_LIMIT;\r\n\r\nexport const IDLE = \"idle\";\r\nexport const LOADING = \"loading\";\r\nexport const ERROR = \"error\";\r\n","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nimport { RootState, AppDispatch } from \"./store\";\r\nimport { apiClient } from \"@apiClient\";\r\nimport { IDLE, LOADING, ERROR } from \"@constants\";\r\nimport { IPokemon } from \"./types\";\r\n\r\nexport interface IProps {\r\n  limit: number;\r\n  offset: number;\r\n}\r\n\r\ninterface IPokemonsSliceState {\r\n  pokemons: IPokemon[];\r\n  pokemon: IPokemon | null;\r\n  count: number;\r\n  hideShowAll: boolean;\r\n  status: \"idle\" | \"loading\";\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: IPokemonsSliceState = {\r\n  pokemons: [],\r\n  pokemon: null,\r\n  count: 0,\r\n  hideShowAll: true,\r\n  status: IDLE,\r\n  error: null,\r\n};\r\n\r\nexport const getPokemonByNameOrId = createAsyncThunk<\r\n  void,\r\n  string | number,\r\n  {\r\n    dispatch: AppDispatch;\r\n  }\r\n>(\"pokemons/getPokemonByNameOrId\", async (name, { dispatch }) => {\r\n  const pokemon = await apiClient.getPokemon(name);\r\n\r\n  dispatch(getPokemonByNameOrIdReducer({ pokemon }));\r\n});\r\n\r\nexport const getPokemons = createAsyncThunk<\r\n  void,\r\n  IProps,\r\n  { dispatch: AppDispatch; state: RootState }\r\n>(\r\n  \"pokemons/getPokemons\",\r\n  async (limits, { dispatch }) => {\r\n    const pokemonList = [];\r\n    const { limit, offset } = limits;\r\n    const { results, count } = await apiClient.getMultiplePokemons(\r\n      limit,\r\n      offset\r\n    );\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    for await (const [_, { name }] of results.entries()) {\r\n      const pokemon = await apiClient.getPokemon(name);\r\n\r\n      pokemonList.push(pokemon);\r\n    }\r\n\r\n    dispatch(\r\n      getPokemonsReducer({\r\n        pokemons: pokemonList,\r\n        count,\r\n      })\r\n    );\r\n  },\r\n  {\r\n    condition: (_, { getState }) => {\r\n      const { pokemons } = getState();\r\n\r\n      if (!pokemons.hideShowAll || pokemons.status === LOADING) {\r\n        return false;\r\n      }\r\n      return;\r\n    },\r\n  }\r\n);\r\n\r\nconst pokemonsSlice = createSlice({\r\n  name: \"pokemons\",\r\n  initialState,\r\n  reducers: {\r\n    getPokemonByNameOrIdReducer(\r\n      state,\r\n      action: PayloadAction<{ pokemon: IPokemon }>\r\n    ) {\r\n      const { pokemon } = action.payload;\r\n\r\n      state.pokemons.length = 0;\r\n      state.hideShowAll = false;\r\n      state.pokemons.push(pokemon);\r\n      state.error = null;\r\n    },\r\n    getPokemonsReducer(\r\n      state,\r\n      action: PayloadAction<{\r\n        pokemons: IPokemon[];\r\n        count: number;\r\n      }>\r\n    ) {\r\n      const { pokemons, count } = action.payload;\r\n\r\n      state.count = count;\r\n      state.pokemons = state.pokemons.concat(pokemons);\r\n    },\r\n    getPokemonReducer(\r\n      state,\r\n      action: PayloadAction<{\r\n        pokemonId: number;\r\n      }>\r\n    ) {\r\n      const { pokemonId } = action.payload;\r\n\r\n      state.pokemon =\r\n        state.pokemons.length === 1\r\n          ? state.pokemons[0]\r\n          : state.pokemons[pokemonId];\r\n    },\r\n    clearPokemonsReducer(state) {\r\n      state.error = null;\r\n      state.pokemons.length = 0;\r\n      state.hideShowAll = true;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(getPokemonByNameOrId.pending, (state) => {\r\n      state.error = null;\r\n      state.status = LOADING;\r\n    });\r\n    builder.addCase(getPokemonByNameOrId.rejected, (state) => {\r\n      state.pokemons.length = 0;\r\n      state.hideShowAll = false;\r\n      state.status = IDLE;\r\n      state.error = ERROR;\r\n    });\r\n    builder.addCase(getPokemonByNameOrId.fulfilled, (state) => {\r\n      state.error = null;\r\n      state.status = IDLE;\r\n    });\r\n    builder.addCase(getPokemons.pending, (state) => {\r\n      state.error = null;\r\n      state.status = LOADING;\r\n    });\r\n    builder.addCase(getPokemons.fulfilled, (state) => {\r\n      state.error = null;\r\n      state.status = IDLE;\r\n    });\r\n  },\r\n});\r\n\r\nexport const {\r\n  getPokemonByNameOrIdReducer,\r\n  getPokemonsReducer,\r\n  getPokemonReducer,\r\n  clearPokemonsReducer,\r\n} = pokemonsSlice.actions;\r\n\r\nexport default pokemonsSlice.reducer;\r\n\r\nexport const selectAllPokemons = (state: RootState) => state.pokemons.pokemons;\r\nexport const selectPokemon = (state: RootState) => state.pokemons.pokemon;\r\nexport const selectCount = (state: RootState) => state.pokemons.count;\r\nexport const selectHideShowAll = (state: RootState) =>\r\n  state.pokemons.hideShowAll;\r\nexport const selectPokemonsStatus = (state: RootState) => state.pokemons.status;\r\nexport const selectPokemonError = (state: RootState) => state.pokemons.error;\r\nexport const selectPokemonsLength = (state: RootState) =>\r\n  state.pokemons.pokemons.length;\r\n","import { createSlice, createAsyncThunk, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nimport { AppDispatch, RootState } from \"./store\";\r\nimport { apiClient } from \"@apiClient\";\r\nimport { ISpecies } from \"./types\";\r\n\r\ninterface ISpeciesSliceState {\r\n  species: ISpecies | null;\r\n  loading: boolean;\r\n}\r\n\r\nconst initialState: ISpeciesSliceState = {\r\n  species: null,\r\n  loading: false,\r\n};\r\n\r\nexport const getPokemonSpecies = createAsyncThunk<\r\n  void,\r\n  string | number,\r\n  {\r\n    dispatch: AppDispatch;\r\n  }\r\n>(\"pokemons/getPokemonSpecies\", async (name, { dispatch }) => {\r\n  const species = await apiClient.getPokemonSpecies(name);\r\n\r\n  dispatch(getPokemonSpeciesReducer({ species }));\r\n});\r\n\r\nconst speciesSlice = createSlice({\r\n  name: \"species\",\r\n  initialState,\r\n  reducers: {\r\n    getPokemonSpeciesReducer(\r\n      state,\r\n      action: PayloadAction<{ species: ISpecies }>\r\n    ) {\r\n      const { species } = action.payload;\r\n\r\n      state.species = species;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(getPokemonSpecies.pending, (state) => {\r\n      state.loading = true;\r\n    });\r\n    builder.addCase(getPokemonSpecies.fulfilled, (state) => {\r\n      state.loading = false;\r\n    });\r\n  },\r\n});\r\n\r\nexport const { getPokemonSpeciesReducer } = speciesSlice.actions;\r\n\r\nexport default speciesSlice.reducer;\r\n\r\nexport const selectPokemonSpecies = (state: RootState) => state.species.species;\r\nexport const selectPokemonSpeciesLoading = (state: RootState) =>\r\n  state.species.loading;\r\n","import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport pokemonsReducer from \"./pokemonsSlice\";\r\nimport speciesReducer from \"./speciesSlice\";\r\n\r\nconst rootReducer = combineReducers({\r\n  pokemons: pokemonsReducer,\r\n  species: speciesReducer,\r\n});\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\n","export default __webpack_public_path__ + \"static/media/puredex-logo.72608648.png\";","\r\nimport styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  grid-area: header;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n  min-width: 300px;\r\n  min-height: 120px;\r\n  z-index: 10;\r\n  background-color: #263238;\r\n  --box-shadow-color: #3d348b;\r\n  box-shadow: rgba(0, 0, 0, 0.4) 0px 2px 4px,\r\n    rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset;\r\n  text-align: center;\r\n\r\n  div {\r\n    display: flex;\r\n    margin-top: -5px;\r\n  }\r\n\r\n  @media (max-width: 900px) {\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  width: 264px;\r\n  height: 100px;\r\n  cursor: pointer;\r\n`;","import { useHistory } from \"react-router\";\r\n\r\nimport PuredexLogo from \"@assets/puredex-logo.png\";\r\nimport * as S from \"./styles\";\r\n\r\nconst Header: React.FC = () => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <S.Wrapper>\r\n      <div>\r\n        <S.Image\r\n          src={PuredexLogo}\r\n          alt=\"puredex\"\r\n          onClick={() => history.push(\"/\")}\r\n        />\r\n      </div>\r\n    </S.Wrapper>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Layout = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-template-rows: auto 4.5fr;\r\n  grid-template-areas: \"header\" \"pokemons\";\r\n  height: 100vh;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport Header from \"../Header\";\r\nimport * as S from \"./styles\";\r\n\r\nexport interface ILayoutProp {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst Layout: React.FC<ILayoutProp> = ({ children }: ILayoutProp) => {\r\n  return (\r\n    <S.Layout>\r\n      <Header />\r\n      {children}\r\n    </S.Layout>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst ldsEllipsis1 = keyframes`\r\n  0% {\r\n    transform: scale(0);\r\n  }\r\n\r\n  100% {\r\n    transform: scale(1);\r\n  }`;\r\n\r\nconst ldsEllipsis2 = keyframes`\r\n  0% {\r\n    transform: translate(0, 0);\r\n  }\r\n\r\n  100% {\r\n    transform: translate(24px, 0);\r\n  }\r\n`;\r\n\r\nconst ldsEllipsis3 = keyframes`\r\n  0% {\r\n    transform: scale(1);\r\n  }\r\n\r\n  100% {\r\n    transform: scale(0);\r\n  }\r\n`;\r\n\r\nexport const Spinner = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const LdsEllipsisChild = styled.div`\r\n  position: absolute;\r\n  top: 33px;\r\n  width: 13px;\r\n  height: 13px;\r\n  border-radius: 50%;\r\n  background: #3d348b;\r\n  animation-timing-function: cubic-bezier(0, 1, 1, 0);\r\n`;\r\n\r\nexport const LdsEllipsis = styled.div`\r\n  position: relative;\r\n  width: 80px;\r\n  height: 80px;\r\n\r\n  ${LdsEllipsisChild}:nth-child(1) {\r\n    left: 8px;\r\n    animation: ${ldsEllipsis1} 0.6s infinite;\r\n  }\r\n\r\n  ${LdsEllipsisChild}:nth-child(2) {\r\n    left: 8px;\r\n    animation: ${ldsEllipsis2} 0.6s infinite;\r\n  }\r\n\r\n  ${LdsEllipsisChild}:nth-child(3) {\r\n    left: 32px;\r\n    animation: ${ldsEllipsis2} 0.6s infinite;\r\n  }\r\n\r\n  ${LdsEllipsisChild}:nth-child(4) {\r\n    left: 56px;\r\n    animation: ${ldsEllipsis3} 0.6s infinite;\r\n  }\r\n`;\r\n","import * as S from \"./styles\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <S.Spinner>\r\n      <S.LdsEllipsis>\r\n        <S.LdsEllipsisChild />\r\n        <S.LdsEllipsisChild />\r\n        <S.LdsEllipsisChild />\r\n        <S.LdsEllipsisChild />\r\n      </S.LdsEllipsis>\r\n    </S.Spinner>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","/*** COLORS PALETTE ***/\r\nexport const yellow = \"#e6af2e\";\r\nexport const purple = \"#3d348b\";\r\nexport const darkGrey = \"#191716ff\";\r\nexport const lightGrey = \"#f6f6f6\";\r\n\r\n/*** POKEMON TYPE COLORS ***/\r\nexport const normal = \"#a8a878\";\r\nexport const fire = \"#ed6d12\";\r\nexport const fighting = \"#c03028\";\r\nexport const water = \"#6890f0\";\r\nexport const poison = \"#a040a0\";\r\nexport const electric = \"#f8d030\";\r\nexport const ground = \"#e0c068\";\r\nexport const grass = \"#78c850\";\r\nexport const flying = \"#a890f0\";\r\nexport const ice = \"#98d8d8\";\r\nexport const bug = \"#a8b820\";\r\nexport const psychic = \"#f85888\";\r\nexport const rock = \"#b8a038\";\r\nexport const dragon = \"#7038f8\";\r\nexport const ghost = \"#705898\";\r\nexport const dark = \"#705848\";\r\nexport const steel = \"#b8b8d0\";\r\nexport const fairy = \"#ffb7fa\";\r\n\r\n/*** BOX SHADOWS ***/\r\nexport const lightBoxShadow = `rgba(50, 50, 93, 0.25) 0px 13px 27px -5px, rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;`;\r\nexport const darkBoxShadow = `rgba(50, 50, 93, 0.25) 0px 13px 35px -5px, rgba(0, 0, 0, 0.8) 0px 8px 16px -8px;`;\r\nexport const ultraBoxShadow = `0 1px 2px rgba(0, 0, 0, 0.07), 0 2px 4px rgba(0, 0, 0, 0.07),\r\n    0 4px 8px rgba(0, 0, 0, 0.07), 0 8px 16px rgba(0, 0, 0, 0.07),\r\n    0 16px 16px rgba(0, 0, 0, 0.07), 0 32px 32px rgba(0, 0, 0, 0.07);`;\r\n","import styled from \"styled-components\";\r\n\r\nimport { animated } from \"react-spring\";\r\nimport { lightBoxShadow, darkBoxShadow } from \"@styles/globals\";\r\n\r\nexport const StyledButton = styled(animated.button)`\r\n  flex-basis: 26%;\r\n  min-width: 400px;\r\n  height: 250px;\r\n  margin: 30px 30px 30px 30px;\r\n  background-color: #fbfbfb;\r\n  box-shadow: ${lightBoxShadow};\r\n  transition: box-shadow 0.2s;\r\n  border: none;\r\n  border-radius: 20px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    box-shadow: ${darkBoxShadow};\r\n    transition: box-shadow 0.2s;\r\n  }\r\n\r\n  @media (max-width: 539px) {\r\n    min-width: 320px;\r\n    height: 200px;\r\n  }\r\n`;","import React, { Fragment, useState } from \"react\";\r\n\r\nimport { useSpring } from \"react-spring\";\r\nimport { StyledButton } from \"./styles\";\r\n\r\ninterface IProps {\r\n  children: React.ReactNode;\r\n  click?: () => void;\r\n}\r\n\r\nconst PokemonCardWrapper: React.FC<IProps> = ({ children, click }: IProps) => {\r\n  const [isHovering, setIsHovering] = useState<boolean>(false);\r\n\r\n  const onMountEffect = useSpring({\r\n    from: { y: 25 },\r\n    to: { y: isHovering ? -20 : 0 },\r\n    config: { duration: 200 },\r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      <StyledButton\r\n        onClick={click}\r\n        style={onMountEffect}\r\n        onMouseEnter={() => setIsHovering(!isHovering)}\r\n        onMouseLeave={() => setIsHovering(!isHovering)}\r\n      >\r\n        {children}\r\n      </StyledButton>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default PokemonCardWrapper;\r\n","export const formatIndex = (index: number) => {\r\n  return `#${index.toLocaleString(undefined, {\r\n    minimumIntegerDigits: 3,\r\n  })}`;\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledPokemonCardInfo = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  margin-top: -45px;\r\n\r\n  p {\r\n    font-size: 23px;\r\n    font-weight: 600;\r\n    color: #636363;\r\n  }\r\n\r\n  div {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-top: 15px;\r\n\r\n    div {\r\n      margin: 0px 7px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 539px) {\r\n    margin-top: -25px;\r\n\r\n    p {\r\n      font-size: 19px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledImage = styled.div`\r\n  grid-row-start: 1;\r\n  grid-column-start: 1;\r\n  justify-self: center;\r\n  margin: 20px 0 15px 0px;\r\n  z-index: 2;\r\n\r\n  img {\r\n    height: 130px;\r\n    width: 130px;\r\n  }\r\n\r\n  @media (max-width: 539px) {\r\n    img {\r\n      height: 110px;\r\n      width: 110px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledIndex = styled.div`\r\n  grid-row-start: 1;\r\n  grid-column-start: 1;\r\n  font-size: 60px;\r\n  font-weight: 600;\r\n  color: #e9e9e9;\r\n  z-index: 1;\r\n\r\n  @media (max-width: 539px) {\r\n    font-size: 40px;\r\n  }\r\n`;\r\n","import { lighten } from \"polished\";\r\nimport * as color from \"@styles/globals\";\r\n\r\nexport interface IProps {\r\n  pokemonType: string;\r\n  light?: boolean;\r\n}\r\n\r\nexport const checkPokemonType = (pokemonType: string, light?: boolean) => {\r\n  switch (pokemonType) {\r\n    case \"normal\":\r\n      return light\r\n        ? `background-color: ${lighten(0.25, color.normal)};`\r\n        : `color: ${color.normal};`;\r\n    case \"fire\":\r\n      return light\r\n        ? `background-color: ${lighten(0.25, color.fire)};`\r\n        : `color: ${color.fire};`;\r\n    case \"fighting\":\r\n      return light\r\n        ? `background-color: ${lighten(0.25, color.fighting)};`\r\n        : `color: ${color.fighting};`;\r\n    case \"water\":\r\n      return light\r\n        ? `background-color: ${lighten(0.2, color.water)};`\r\n        : `color: ${color.water};`;\r\n    case \"poison\":\r\n      return light\r\n        ? `background-color: ${lighten(0.2, color.poison)};`\r\n        : `color: ${color.poison};`;\r\n    case \"electric\":\r\n      return light\r\n        ? `background-color: ${lighten(0.18, color.electric)};`\r\n        : `color: ${color.electric};`;\r\n    case \"ground\":\r\n      return light\r\n        ? `background-color: ${lighten(0.19, color.ground)};`\r\n        : `color: ${color.ground};`;\r\n    case \"grass\":\r\n      return light\r\n        ? `background-color: ${lighten(0.25, color.grass)};`\r\n        : `color: ${color.grass};`;\r\n    case \"flying\":\r\n      return light\r\n        ? `background-color: ${lighten(0.12, color.flying)};`\r\n        : `color: ${color.flying};`;\r\n    case \"ice\":\r\n      return light\r\n        ? `background-color: ${lighten(0.16, color.ice)};`\r\n        : `color: ${color.ice};`;\r\n    case \"bug\":\r\n      return light\r\n        ? `background-color: ${lighten(0.25, color.bug)};`\r\n        : `color: ${color.bug};`;\r\n    case \"psychic\":\r\n      return light\r\n        ? `background-color: ${lighten(0.25, color.psychic)};`\r\n        : `color: ${color.psychic};`;\r\n    case \"rock\":\r\n      return light\r\n        ? `background-color: ${lighten(0.25, color.rock)};`\r\n        : `color: ${color.rock};`;\r\n    case \"dragon\":\r\n      return light\r\n        ? `background-color: ${lighten(0.2, color.dragon)};`\r\n        : `color: ${color.dragon};`;\r\n    case \"ghost\":\r\n      return light\r\n        ? `background-color: ${lighten(0.25, color.ghost)};`\r\n        : `color: ${color.ghost};`;\r\n    case \"dark\":\r\n      return light\r\n        ? `background-color: ${lighten(0.23, color.dark)};`\r\n        : `color: ${color.dark};`;\r\n    case \"steel\":\r\n      return light\r\n        ? `background-color: ${lighten(0.12, color.steel)};`\r\n        : `color: ${color.steel};`;\r\n    case \"fairy\":\r\n      return light\r\n        ? `background-color: ${lighten(0.04, color.fairy)};`\r\n        : `color: ${color.fairy};`;\r\n    default:\r\n      return \"\";\r\n  }\r\n};\r\n","import styled from \"styled-components\";\r\nimport { checkPokemonType } from \"@utils/checkPokemonType\";\r\n\r\ninterface IProps {\r\n  type: string;\r\n  light?: boolean;\r\n}\r\n\r\nexport const Badge = styled.div<IProps>`\r\n  display: inline-block;\r\n  text-align: center;\r\n  font-size: 17px;\r\n  font-weight: 600;\r\n  text-transform: uppercase;\r\n\r\n  ${({ type }) => checkPokemonType(type)};\r\n\r\n  @media (max-width: 539px) {\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nexport const Dot = styled.div`\r\n  display: inline-block;\r\n  width: 10px;\r\n  height: 10px;\r\n  background-color: #bbb;\r\n  border-radius: 50%;\r\n  margin: 0 10px 0 10px;\r\n`;","import React, { Fragment } from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\ninterface ITypes {\r\n  typeOne: string;\r\n  typeTwo: string;\r\n}\r\n\r\nconst Badges: React.FC<ITypes> = ({ typeOne, typeTwo }: ITypes) => {\r\n  const hasTypeTwo = !typeTwo ? null : (\r\n    <Fragment>\r\n      <S.Dot />\r\n      <S.Badge type={typeTwo}>{typeTwo}</S.Badge>\r\n    </Fragment>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <S.Badge type={typeOne}>{typeOne}</S.Badge>\r\n      {hasTypeTwo}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Badges;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nimport \"react-lazy-load-image-component/src/effects/blur.css\";\r\n\r\nimport PokemonCardWrapper from \"../PokemonCardWrapper\";\r\nimport { formatIndex } from \"@utils/formatIndex\";\r\nimport { StyledPokemonCardInfo, StyledImage, StyledIndex } from \"./styles\";\r\nimport Badges from \"../Badges\";\r\n\r\ninterface IPokemon {\r\n  name: string;\r\n  index: number;\r\n  typeOne: string;\r\n  typeTwo: string;\r\n  sprite: string;\r\n}\r\n\r\nconst PokemonCard: React.FC<IPokemon> = ({\r\n  name,\r\n  index,\r\n  typeOne,\r\n  typeTwo,\r\n  sprite,\r\n}: IPokemon) => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <PokemonCardWrapper click={() => history.push(`/pokemon/${index}`)}>\r\n      <StyledPokemonCardInfo>\r\n        <StyledImage>\r\n          <LazyLoadImage alt={name} effect=\"blur\" src={sprite} />\r\n        </StyledImage>\r\n        <StyledIndex>\r\n          <h1>{formatIndex(index)}</h1>\r\n        </StyledIndex>\r\n        <p>{name.toUpperCase()}</p>\r\n        <Badges typeOne={typeOne} typeTwo={typeTwo} />\r\n      </StyledPokemonCardInfo>\r\n    </PokemonCardWrapper>\r\n  );\r\n};\r\n\r\nexport default PokemonCard;\r\n","import styled from \"styled-components\";\r\n\r\nimport { purple } from \"@styles/globals\";\r\n\r\nexport const SearchBar = styled.div`\r\n  grid-area: \"pokemons\";\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 190px;\r\n\r\n  div {\r\n    position: relative;\r\n  }\r\n`;\r\n\r\nexport const SearchInput = styled.input`\r\n  width: 400px;\r\n  height: 25px;\r\n  background: #fbfbfb;\r\n  font: inherit;\r\n  position: relative;\r\n  z-index: 3;\r\n  box-shadow: 0 6px 10px 0 rgba(0, 0, 0, 0.1);\r\n  border: none;\r\n  border-radius: 30px;\r\n  outline: 0;\r\n  font-size: 16px;\r\n  padding: 22px 18px;\r\n  transition: box-shadow 0.3s;\r\n\r\n  &:focus {\r\n    color: ${purple};\r\n    box-shadow: 0 10px 10px 0 rgb(61, 52, 139, 0.25);\r\n    transition: box-shadow 0.3s;\r\n  }\r\n\r\n  @media (max-width: 600px) {\r\n    width: 250px;\r\n    font-size: 14px;\r\n    height: 15px;\r\n  }\r\n`;\r\n\r\nexport const SearchButton = styled.button`\r\n  display: inline-block;\r\n  position: relative;\r\n  color: inherit;\r\n  background: transparent;\r\n  z-index: 5;\r\n  border: 0;\r\n  transition: all 200ms ease-in;\r\n  cursor: pointer;\r\n  margin-left: -60px;\r\n  background: ${purple};\r\n  color: #ffffff;\r\n  box-shadow: 0 0 10px 2px rgba(0, 0, 0, 0.1);\r\n  border-radius: 25px;\r\n  font-size: 15px;\r\n  width: 100px;\r\n  height: 45px;\r\n  opacity: 80%;\r\n\r\n  &:hover {\r\n    opacity: 90%;\r\n  }\r\n\r\n  @media (max-width: 600px) {\r\n    font-size: 14px;\r\n    width: 70px;\r\n    height: 40px;\r\n    margin-left: -20px;\r\n  }\r\n`;\r\n\r\nexport const SearchButtonClicked = styled(SearchButton)`\r\n  opacity: 60%;\r\n  cursor: auto;\r\n\r\n  &:hover {\r\n    opacity: 60%;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nimport { animated } from \"react-spring\";\r\nimport { darkGrey } from \"@styles/globals\";\r\n\r\nexport const Back = styled(animated.button)`\r\n  display: inline-block;\r\n  font-size: 15px;\r\n  position: absolute;\r\n  width: 130px;\r\n  height: 45px;\r\n  top: 12px;\r\n  left: -150px;\r\n  z-index: 1;\r\n  color: inherit;\r\n  color: #ffffff;\r\n  background: transparent;\r\n  background: ${darkGrey};\r\n  border: 0;\r\n  box-shadow: 0 0 15px 2px rgba(0, 0, 0, 0.15);\r\n  border-radius: 25px;\r\n  margin-right: 30px;\r\n  transition: all 0.3s ease-in-out 0s;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    opacity: 90%;\r\n  }\r\n\r\n  @media (max-width: 539px) {\r\n    left: 97.5px;\r\n    top: -50px;\r\n  }\r\n`;\r\n","import React, { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { useTransition, animated } from \"react-spring\";\r\nimport { useAppDispatch } from \"@features/store\";\r\n\r\nimport {\r\n  clearPokemonsReducer,\r\n  selectHideShowAll,\r\n} from \"@features/pokemonsSlice\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nconst BackButton: React.FC = () => {\r\n  const dispatch = useAppDispatch();\r\n  const hideShowAll = useSelector(selectHideShowAll);\r\n\r\n  const showAllHandler = () => {\r\n    dispatch(clearPokemonsReducer());\r\n  };\r\n\r\n  const hideShowAllEffect = useTransition(hideShowAll, {\r\n    from: { opacity: 0, x: 200 },\r\n    enter: { opacity: 0.8, x: 0 },\r\n    leave: { opacity: 0.5, x: 200 },\r\n    config: { duration: 200 },\r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      {hideShowAllEffect((style, searchButton) =>\r\n        searchButton ? (\r\n          \"\"\r\n        ) : (\r\n          <animated.div style={style}>\r\n            <S.Back onClick={showAllHandler}>Back</S.Back>\r\n          </animated.div>\r\n        )\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default BackButton;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { useAppDispatch } from \"@features/store\";\r\nimport * as S from \"./styles\";\r\n\r\nimport BackButton from \"../BackButton\";\r\n\r\nimport {\r\n  getPokemonByNameOrId,\r\n  selectPokemonsStatus,\r\n} from \"@features/pokemonsSlice\";\r\n\r\nimport { LOADING } from \"@constants\";\r\n\r\nconst Searchbar: React.FC = () => {\r\n  const [pokemonNameOrId, setPokemonNameOrId] = useState<string>(\"\");\r\n\r\n  const pokemonsStatus = useSelector(selectPokemonsStatus);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const inputHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    event.preventDefault();\r\n\r\n    const enteredInput = event.target.value;\r\n    setPokemonNameOrId(enteredInput);\r\n  };\r\n\r\n  const searchPokemonHandler = () => {\r\n    if (pokemonNameOrId) {\r\n      dispatch(getPokemonByNameOrId(pokemonNameOrId.toLowerCase()));\r\n    }\r\n  };\r\n\r\n  const keyDownHandler = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (event.key === \"Enter\") {\r\n      if (pokemonNameOrId) {\r\n        dispatch(getPokemonByNameOrId(pokemonNameOrId.toLowerCase()));\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <S.SearchBar>\r\n      <div>\r\n        <BackButton />\r\n        <S.SearchInput\r\n          placeholder=\"Enter the name or id of the pokémon\"\r\n          onChange={inputHandler}\r\n          type=\"text\"\r\n          value={pokemonNameOrId}\r\n          onKeyDown={keyDownHandler}\r\n        />\r\n\r\n        {pokemonsStatus === LOADING || pokemonNameOrId === \"\" ? (\r\n          <S.SearchButtonClicked>Search</S.SearchButtonClicked>\r\n        ) : (\r\n          <S.SearchButton onClick={searchPokemonHandler}>Search</S.SearchButton>\r\n        )}\r\n      </div>\r\n    </S.SearchBar>\r\n  );\r\n};\r\n\r\nexport default Searchbar;\r\n","import styled from \"styled-components\";\r\n\r\nexport const LoadingSpace = styled.div`\r\n  padding-bottom: \"20px\";\r\n  width: 100%;\r\n  height: 130px;\r\n`;\r\n","import React, { Fragment } from \"react\";\r\n\r\nimport { Waypoint } from \"react-waypoint\";\r\nimport * as S from \"./styles\";\r\n\r\ninterface IProps {\r\n  children: React.ReactNode;\r\n  callBack(args: Waypoint.CallbackArgs): void;\r\n}\r\n\r\nconst InfiniteScroll = ({ children, callBack }: IProps) => {\r\n  return (\r\n    <Fragment>\r\n      {children}\r\n      <Waypoint bottomOffset=\"-20px\" onEnter={callBack}>\r\n        <S.LoadingSpace />\r\n      </Waypoint>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default InfiniteScroll;\r\n","export default __webpack_public_path__ + \"static/media/pikachu.af02434e.png\";","import styled from \"styled-components\";\r\n\r\nimport { StyledImage } from \"../PokemonCard/styles\";\r\nimport { StyledButton } from \"../PokemonCardWrapper/styles\";\r\n\r\nexport const PokemonAlert = styled(StyledButton)`\r\n  cursor: auto;\r\n`;\r\n\r\nexport const Sprite = styled(StyledImage)`\r\n  width: 150px;\r\n  height: 165px;\r\n  margin-bottom: -10px;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nimport \"react-lazy-load-image-component/src/effects/blur.css\";\r\n\r\nimport Pikachu from \"@assets/pikachu.png\";\r\nimport * as S from \"./styles\";\r\nimport { StyledPokemonCardInfo, StyledIndex } from \"../PokemonCard/styles\";\r\n\r\ninterface IProps {\r\n  message: string;\r\n}\r\n\r\nconst PokemonAlert: React.FC<IProps> = ({ message }: IProps) => {\r\n  return (\r\n    <S.PokemonAlert>\r\n      <StyledPokemonCardInfo>\r\n        <S.Sprite>\r\n          <LazyLoadImage alt=\"pikachu\" effect=\"blur\" src={Pikachu} />\r\n        </S.Sprite>\r\n        <StyledIndex>\r\n          <h1>#000</h1>\r\n        </StyledIndex>\r\n        <p>{message}</p>\r\n      </StyledPokemonCardInfo>\r\n    </S.PokemonAlert>\r\n  );\r\n};\r\n\r\nexport default PokemonAlert;\r\n","export default __webpack_public_path__ + \"static/media/pokeball.79fa1373.svg\";","import styled from \"styled-components\";\r\n\r\nimport Pokeball from \"@assets/pokeball.svg\";\r\nimport { lightGrey } from \"@styles/globals\";\r\n\r\nexport const PokemonsListPage = styled.div`\r\n  grid-area: pokemons;\r\n  overflow-y: scroll;\r\n  flex-wrap: wrap;\r\n  overflow-x: hidden;\r\n  background-color: ${lightGrey};\r\n  background-image: url(${Pokeball});\r\n  background-repeat: no-repeat;\r\n  background-size: 1500px;\r\n  background-position: center;\r\n`;\r\n\r\nexport const PokemonsListWrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n  justify-content: center;\r\n  margin-top: -20px;\r\n`;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { useAppDispatch } from \"@features/store\";\r\n\r\nimport Layout from \"../../components/Layout\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport PokemonCard from \"../../components/PokemonCard\";\r\nimport SearchBar from \"../../components/SearchBar\";\r\nimport InfiniteScroll from \"../../components/InfiniteScroll\";\r\nimport PokemonAlert from \"../../components/PokemonAlert\";\r\nimport * as S from \"./styles\";\r\n\r\nimport {\r\n  getPokemons,\r\n  selectAllPokemons,\r\n  selectHideShowAll,\r\n  selectPokemonsStatus,\r\n  selectCount,\r\n  clearPokemonsReducer,\r\n  selectPokemonError,\r\n} from \"@features/pokemonsSlice\";\r\n\r\nimport {\r\n  IDLE,\r\n  ERROR,\r\n  NEXT_FETCH_LIMIT,\r\n  FIRST_FETCH_LIMIT,\r\n  FIRST_FETCH_OFFSET,\r\n} from \"@constants\";\r\n\r\nconst PokemonsListPage: React.FC = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [initLoading, setInitLoading] = useState(false);\r\n\r\n  const hideShowAll = useSelector(selectHideShowAll);\r\n  const pokemons = useSelector(selectAllPokemons);\r\n  const pokemonsStatus = useSelector(selectPokemonsStatus);\r\n  const pokemonError = useSelector(selectPokemonError);\r\n  const count = useSelector(selectCount);\r\n\r\n  const prevPokemonsLength = useRef(pokemons.length);\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const pokemonsList = pokemons.map((pokemon) => (\r\n    <PokemonCard\r\n      key={pokemon.id}\r\n      name={pokemon.name}\r\n      index={pokemon.id}\r\n      sprite={pokemon.sprites.other[\"official-artwork\"].front_default}\r\n      typeOne={pokemon.types[0].type.name}\r\n      typeTwo={pokemon.types[1] === undefined ? \"\" : pokemon.types[1].type.name}\r\n    />\r\n  ));\r\n\r\n  const getMorePokemons = async () => {\r\n    if (\r\n      pokemonsStatus === IDLE &&\r\n      pokemons.length > 0 &&\r\n      !loading &&\r\n      hideShowAll &&\r\n      pokemons.length + 1 <= count\r\n    ) {\r\n      const currentOffset = pokemons.length + 1;\r\n      setLoading(true);\r\n      dispatch(getPokemons({ limit: NEXT_FETCH_LIMIT, offset: currentOffset }));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (pokemons.length === 0 && hideShowAll) {\r\n      setInitLoading(true);\r\n      dispatch(clearPokemonsReducer());\r\n      dispatch(\r\n        getPokemons({ limit: FIRST_FETCH_LIMIT, offset: FIRST_FETCH_OFFSET })\r\n      );\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [hideShowAll]);\r\n\r\n  useEffect(() => {\r\n    if (prevPokemonsLength.current !== pokemons.length) {\r\n      setLoading(false);\r\n      setInitLoading(false);\r\n    }\r\n  }, [pokemons.length]);\r\n\r\n  return (\r\n    <Layout>\r\n      <S.PokemonsListPage>\r\n        {initLoading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <>\r\n            <SearchBar />\r\n            <InfiniteScroll callBack={getMorePokemons}>\r\n              <S.PokemonsListWrapper>\r\n                {pokemonsList}\r\n                {pokemonError === ERROR && (\r\n                  <PokemonAlert message={\"There is no such pokemon\"} />\r\n                )}\r\n              </S.PokemonsListWrapper>\r\n              {loading && <Spinner />}\r\n            </InfiniteScroll>\r\n          </>\r\n        )}\r\n      </S.PokemonsListPage>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default PokemonsListPage;\r\n","import styled from \"styled-components\";\r\n\r\nimport { IProps } from \"@utils/checkPokemonType\";\r\nimport { animated } from \"react-spring\";\r\nimport { lightBoxShadow } from \"@styles/globals\";\r\nimport { checkPokemonType } from \"@utils/checkPokemonType\";\r\n\r\nexport const View = styled.div<IProps>`\r\n  grid-template-columns: 1fr;\r\n  display: grid;\r\n  place-items: center;\r\n  width: 600px;\r\n  height: 600px;\r\n  border-radius: 30px 30px 30px 0;\r\n  box-shadow: ${lightBoxShadow};\r\n\r\n  ${({ pokemonType, light }) => checkPokemonType(pokemonType, light)};\r\n\r\n  @media (max-width: 600px) {\r\n    min-width: 250px;\r\n    max-width: 390px;\r\n    max-height: 480px;\r\n    border-radius: 0px 0px 30px 30px;\r\n  }\r\n`;\r\n\r\nexport const Image = styled(animated.img)`\r\n  grid-row-start: 1;\r\n  grid-column-start: 1;\r\n  width: 250px;\r\n  height: 250px;\r\n  z-index: 3;\r\n\r\n  @media (max-width: 600px) {\r\n    height: 200px;\r\n    width: 200px;\r\n  }\r\n`;\r\n\r\nexport const Name = styled.div`\r\n  font-size: 55px;\r\n  font-weight: 600;\r\n  grid-row-start: 1;\r\n  grid-column-start: 1;\r\n  color: #636363;\r\n  top: 50px;\r\n  z-index: 0;\r\n  margin-bottom: 300px;\r\n\r\n  @media (max-width: 600px) {\r\n    font-size: 35px;\r\n  }\r\n`;\r\n\r\nexport const Index = styled.div`\r\n  font-size: 100px;\r\n  font-weight: 600;\r\n  grid-row-start: 1;\r\n  grid-column-start: 1;\r\n  color: #f2f2f2;\r\n  z-index: 1;\r\n\r\n  @media (max-width: 600px) {\r\n    font-size: 65px;\r\n  }\r\n`;\r\n\r\nexport const Round = styled(animated.div)`\r\n  grid-row-start: 1;\r\n  grid-column-start: 1;\r\n  width: 350px;\r\n  height: 350px;\r\n  background-color: #f2f2f2;\r\n  border-radius: 50%;\r\n  z-index: 2;\r\n  opacity: 0.3;\r\n\r\n  @media (max-width: 600px) {\r\n    width: 320px;\r\n    height: 320px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { useSpring } from \"react-spring\";\r\nimport { formatIndex } from \"@utils/formatIndex\";\r\nimport * as S from \"./styles\";\r\n\r\ninterface IPokemon {\r\n  name: string;\r\n  index: number;\r\n  type: string;\r\n  sprite: string;\r\n}\r\n\r\nconst PokemonDetailView: React.FC<IPokemon> = ({\r\n  name,\r\n  index,\r\n  type,\r\n  sprite,\r\n}: IPokemon) => {\r\n  const calc = (x: number, y: number) => [\r\n    x - window.innerWidth / 2,\r\n    y - window.innerHeight / 2,\r\n  ];\r\n  const trans1 = (x: number, y: number) =>\r\n    `translate3d(${x / 10}px,${y / 10}px,0)`;\r\n  const trans2 = (x: number, y: number) =>\r\n    `translate3d(${x / 10}px,${y / 10}px,0)`;\r\n\r\n  const [props, set] = useSpring(() => ({\r\n    xy: [0, 0],\r\n    config: { mass: 10, tension: 550, friction: 140 },\r\n  }));\r\n\r\n  return (\r\n    <S.View\r\n      pokemonType={type}\r\n      light\r\n      onMouseMove={({ clientX: x, clientY: y }) => set({ xy: calc(x, y) })}\r\n    >\r\n      <S.Name>{name.toUpperCase()}</S.Name>\r\n      <S.Image src={sprite} style={{ transform: props.xy.to(trans2) }} />\r\n      <S.Round style={{ transform: props.xy.to(trans1) }} />\r\n      <S.Index>\r\n        <h1>{formatIndex(index)}</h1>\r\n      </S.Index>\r\n    </S.View>\r\n  );\r\n};\r\n\r\nexport default PokemonDetailView;\r\n","import styled from \"styled-components\";\r\n\r\nimport { animated } from \"react-spring\";\r\nimport { purple } from \"@styles/globals\";\r\n\r\nexport const Description = styled(animated.div)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  text-align: center;\r\n  font-size: 20px;\r\n  color: #636363;\r\n\r\n  span {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  @media (max-width: 600px) {\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.span`\r\n  display: flex;\r\n  font-weight: 500;\r\n  margin-bottom: 20px;\r\n\r\n  p {\r\n    margin: 0px 10px 0 10px;\r\n    font-weight: 600;\r\n  }\r\n\r\n  h1 {\r\n    font-size: 20px;\r\n    margin-bottom: -10px;\r\n    color: ${purple};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { IPokemon } from \"@features/types\";\r\nimport { selectPokemonSpecies } from \"@features/speciesSlice\";\r\nimport { useSpring } from \"react-spring\";\r\nimport { formatIndex } from \"@utils/formatIndex\";\r\nimport Badges from \"../Badges\";\r\nimport * as S from \"./styles\";\r\n\r\nconst PokemonDetailDescription: React.FC<IPokemon> = ({\r\n  ...props\r\n}: IPokemon) => {\r\n  const species = useSelector(selectPokemonSpecies);\r\n\r\n  const TransitionEffect = useSpring({\r\n    from: { opacity: 0 },\r\n    to: { opacity: 1 },\r\n    config: { duration: 500 },\r\n  });\r\n\r\n  return (\r\n    <S.Description style={TransitionEffect}>\r\n      {species && (\r\n        <>\r\n          <S.Label>\r\n            <h1>{props.name.toUpperCase()}</h1>\r\n          </S.Label>\r\n          <span>{species.flavor_text_entries[17].flavor_text}</span>\r\n          <S.Label>\r\n            Index: <p>{formatIndex(props.id)}</p>\r\n          </S.Label>\r\n          <S.Label>\r\n            Weight: <p>{(props.weight * 0.1).toFixed(1)} kg</p>\r\n          </S.Label>\r\n          <S.Label>\r\n            Height: <p>{(props.height * 0.1).toFixed(1)} m </p>\r\n          </S.Label>\r\n          <S.Label>\r\n            Capture Rate: <p>{species.capture_rate} </p> of 255\r\n          </S.Label>\r\n          <S.Label>\r\n            Happiness: <p>{species.base_happiness} </p> of 255\r\n          </S.Label>\r\n          <S.Label>\r\n            Habitat: <p>{species.habitat?.name.toUpperCase() || \"UNKNOWN\"}</p>\r\n          </S.Label>\r\n          <S.Label>\r\n            Type: &nbsp;\r\n            <Badges\r\n              typeOne={props.types[0].type.name}\r\n              typeTwo={props.types[1] ? props.types[1].type.name : \"\"}\r\n            />\r\n          </S.Label>\r\n        </>\r\n      )}\r\n    </S.Description>\r\n  );\r\n};\r\n\r\nexport default PokemonDetailDescription;\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nconst useIsMounted = () => {\r\n  const isMounted = useRef(false);\r\n\r\n  useEffect(() => {\r\n    isMounted.current = true;\r\n\r\n    return () => {\r\n      isMounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  return isMounted;\r\n};\r\n\r\nexport default useIsMounted;","import { useCallback, useState } from \"react\";\r\nimport useIsMounted from \"./useIsMounted\";\r\n\r\nconst useSafeState = <T>(initialValue: T) => {\r\n  const [state, setState] = useState(initialValue);\r\n\r\n  const isMounted = useIsMounted();\r\n\r\n  const updateState = useCallback(\r\n    (newValue: T) => {\r\n      if (isMounted.current) {\r\n        setState(newValue);\r\n      }\r\n    },\r\n    [isMounted]\r\n  );\r\n\r\n  return [state, updateState] as const;\r\n};\r\n\r\nexport default useSafeState;","import styled from \"styled-components\";\r\n\r\nimport { purple } from \"@styles/globals\";\r\n\r\nexport const ProgressBar = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  width: 250px;\r\n  height: 25px;\r\n  border-radius: 20px;\r\n  background-color: #d8d8d8;\r\n\r\n  @media (max-width: 600px) {\r\n    width: 180px;\r\n  }\r\n`;\r\n\r\nexport const Progress = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 0;\r\n  height: 100%;\r\n  border-radius: 15px;\r\n  color: #fff;\r\n  background: ${purple};\r\n  opacity: 0;\r\n  transition: 1s ease 0.3s;\r\n`;\r\n","import useSafeState from \"../../hooks/useSafeState\";\r\nimport * as S from \"./styles\";\r\n\r\ninterface IProps {\r\n  baseStat: number;\r\n}\r\n\r\nconst ProgressBar: React.FC<IProps> = ({ baseStat }: IProps) => {\r\n  const [style, setStyle] = useSafeState({});\r\n\r\n  setTimeout(() => {\r\n    const newStyle = {\r\n      opacity: 0.8,\r\n      width: `${(baseStat / 255) * 100}%`,\r\n    };\r\n\r\n    setStyle(newStyle);\r\n  }, 10);\r\n\r\n  return (\r\n    <S.ProgressBar>\r\n      <S.Progress style={style}>{baseStat}</S.Progress>\r\n    </S.ProgressBar>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n","import styled from \"styled-components\";\r\n\r\nimport { animated } from \"react-spring\";\r\n\r\nexport const Statistics = styled(animated.table)`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  div {\r\n    display: flex;\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  td,\r\n  th {\r\n    width: 100%;\r\n  }\r\n\r\n  tr {\r\n    align-items: center;\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.div`\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n  color: #636363;\r\n  white-space: nowrap;\r\n\r\n  p {\r\n    font-weight: 600;\r\n  }\r\n\r\n  @media (max-width: 600px) {\r\n    font-size: 16px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { IPokemon } from \"@features/types\";\r\nimport ProgressBar from \"../ProgressBar\";\r\nimport { useSpring } from \"react-spring\";\r\nimport * as S from \"./styles\";\r\n\r\nconst PokemonDetailStats: React.FC<IPokemon> = ({ ...props }: IPokemon) => {\r\n  const TransitionEffect = useSpring({\r\n    from: { opacity: 0 },\r\n    to: { opacity: 1 },\r\n    config: { duration: 500 },\r\n  });\r\n\r\n  const statElements = props.stats.map((stat) => {\r\n    return (\r\n      <tbody key={stat.stat.name}>\r\n        <tr>\r\n          <td>\r\n            <S.Label>{stat.stat.name.toUpperCase()}: </S.Label>\r\n          </td>\r\n          <td>\r\n            <ProgressBar baseStat={stat.base_stat} />\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <S.Statistics style={TransitionEffect}>\r\n      <tbody>\r\n        <tr>\r\n          <th>\r\n            <S.Label>\r\n              <p>STATISTIC NAME</p>\r\n            </S.Label>\r\n          </th>\r\n          <th>\r\n            <S.Label>\r\n              <p>MAX 255</p>\r\n            </S.Label>\r\n          </th>\r\n        </tr>\r\n      </tbody>\r\n\r\n      {statElements}\r\n    </S.Statistics>\r\n  );\r\n};\r\n\r\nexport default PokemonDetailStats;\r\n","import styled from \"styled-components\";\r\n\r\nimport { purple } from \"@styles/globals\";\r\n\r\ninterface IButtonProps {\r\n  active: boolean;\r\n  id: any;\r\n}\r\n\r\nexport const Tab = styled.button<IButtonProps>`\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  position: relative;\r\n  height: 35px;\r\n  color: #636363;\r\n  background: none;\r\n  border: none;\r\n  border-radius: 4px;\r\n  margin: 15px 0 0 35px;\r\n  cursor: pointer;\r\n\r\n  border-bottom: ${(props) => (props.active ? `3px solid ${purple}` : \"\")};\r\n\r\n  ${(props) =>\r\n    !props.active\r\n      ? `font-weight: 500;\r\n      :before {\r\n    content: \"\";\r\n    position: absolute;\r\n    display: block;\r\n    width: 100%;\r\n    height: 35px;\r\n    bottom: 0;\r\n    left: 0;\r\n    border-radius: 4px;\r\n    border-bottom: 3px solid ${purple};\r\n    transform: scaleX(0);\r\n    transition: transform 0.3s ease;\r\n  }\r\n  :hover::before {\r\n    transform: scaleX(1);\r\n  }`\r\n      : ``}\r\n\r\n  @media (max-width: 600px) {\r\n    font-size: 16px;\r\n    margin: 15px 0 0 15px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\ninterface IProps {\r\n  tabName: string;\r\n  click: (event: React.MouseEvent) => void;\r\n  isActive: boolean;\r\n  index: number;\r\n}\r\n\r\nconst PokemonDetailTab: React.FC<IProps> = ({\r\n  tabName,\r\n  click,\r\n  isActive,\r\n  index,\r\n}: IProps) => {\r\n  return (\r\n    <S.Tab onClick={click} active={isActive} id={index}>\r\n      {tabName}\r\n    </S.Tab>\r\n  );\r\n};\r\n\r\nexport default PokemonDetailTab;\r\n","import styled from \"styled-components\";\r\n\r\nimport { lightBoxShadow } from \"@styles/globals\";\r\n\r\nexport const Profile = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 600px;\r\n  height: 600px;\r\n  border: none;\r\n  border-radius: 30px 0px 30px 30px;\r\n  background-color: #fbfbfb;\r\n  box-shadow: ${lightBoxShadow};\r\n\r\n\r\n  @media (max-width: 600px) {\r\n    min-width: 250px;\r\n    max-width: 390px;\r\n    max-height: 530px;\r\n    border-radius: 30px 30px 0px 0px;\r\n  }\r\n`;\r\n\r\nexport const TabsList = styled.div`\r\n  display: flex;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  width: 85%;\r\n\r\n  @media (max-width: 600px) {\r\n    width: 85%;\r\n  }\r\n`;","import React, { useState } from \"react\";\r\n\r\nimport { IPokemon } from \"@features/types\";\r\nimport PokemonDetailDescription from \"../PokemonDetailDescription\";\r\nimport PokemonDetailStatistics from \"../PokemonDetailStatistics\";\r\nimport PokemonDetailTab from \"../PokemonDetailTab\";\r\nimport * as S from \"./styles\";\r\n\r\nconst PokemonDetailProfile: React.FC<IPokemon> = ({ ...props }: IPokemon) => {\r\n  const [active, setActive] = useState<number>(0);\r\n\r\n  const changeCurrentTab = (event: React.MouseEvent) => {\r\n    const id = parseInt((event.target as HTMLButtonElement).id, 0);\r\n    if (id !== active) {\r\n      setActive(id);\r\n    }\r\n  };\r\n\r\n  const data = {\r\n    tabs: [\r\n      {\r\n        tabName: \"Description\",\r\n        index: 0,\r\n        isActive: active === 0,\r\n        component: <PokemonDetailDescription {...props} />,\r\n      },\r\n      {\r\n        tabName: \"Statistics\",\r\n        index: 1,\r\n        isActive: active === 1,\r\n        component: <PokemonDetailStatistics {...props} />,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const tabElements = data.tabs.map((x) => (\r\n    <PokemonDetailTab\r\n      click={changeCurrentTab}\r\n      isActive={x.isActive}\r\n      index={x.index}\r\n      tabName={x.tabName}\r\n      key={x.tabName}\r\n    />\r\n  ));\r\n\r\n  const tabContents = data.tabs.map((x) => (\r\n    <React.Fragment key={x.tabName}>\r\n      {data.tabs[x.index].isActive && x.component}\r\n    </React.Fragment>\r\n  ));\r\n\r\n  return (\r\n    <S.Profile>\r\n      <S.TabsList>{tabElements}</S.TabsList>\r\n      <S.Content>{tabContents}</S.Content>\r\n    </S.Profile>\r\n  );\r\n};\r\n\r\nexport default PokemonDetailProfile;\r\n","import styled from \"styled-components\";\r\n\r\nimport Pokeball from \"@assets/pokeball.svg\";\r\nimport { lightGrey } from \"@styles/globals\";\r\n\r\nexport const PokemonDetailPage = styled.div`\r\n  grid-area: pokemons;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  background-color: ${lightGrey};\r\n  background-image: url(${Pokeball});\r\n  background-repeat: no-repeat;\r\n  background-size: 1500px;\r\n  background-position: center;\r\n\r\n  @media (max-width: 600px) {\r\n    max-width: auto;\r\n  }\r\n`;\r\n","import React, { useEffect, useMemo, useState } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { useAppDispatch } from \"@features/store\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport PokemonDetailView from \"../../components/PokemonDetailView\";\r\nimport PokemonDetailProfile from \"../../components/PokemonDetailProfile\";\r\nimport * as S from \"./styles\";\r\n\r\nimport {\r\n  getPokemonByNameOrId,\r\n  getPokemonReducer,\r\n  selectPokemon,\r\n  selectPokemonsLength,\r\n} from \"@features/pokemonsSlice\";\r\n\r\nimport {\r\n  getPokemonSpecies,\r\n  selectPokemonSpeciesLoading,\r\n} from \"@features/speciesSlice\";\r\n\r\nconst PokemonDetailPage: React.FC = () => {\r\n  const [pokemonId, setPokemonId] = useState<number>();\r\n\r\n  const location = useLocation();\r\n  const pathname = location.pathname;\r\n  const convertedId = parseInt(pathname.replace(\"/pokemon/\", \"\"));\r\n\r\n  const pokemon = useSelector(selectPokemon);\r\n  const loading = useSelector(selectPokemonSpeciesLoading);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const pokemonsLength = useSelector(selectPokemonsLength);\r\n\r\n  useEffect(() => {\r\n    if (!pokemonsLength) {\r\n      dispatch(getPokemonByNameOrId(convertedId));\r\n    }\r\n  }, [convertedId, dispatch, pokemonsLength]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getPokemonSpecies(convertedId));\r\n\r\n    setPokemonId(convertedId);\r\n  }, [convertedId, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (pokemonId && pokemonsLength) {\r\n      dispatch(getPokemonReducer({ pokemonId }));\r\n    }\r\n  }, [dispatch, pokemonId, pokemonsLength]);\r\n\r\n  const pokemonItem = useMemo(() => {\r\n    if (pokemon) {\r\n      return (\r\n        <S.PokemonDetailPage>\r\n          <PokemonDetailView\r\n            key={pokemon.id}\r\n            index={pokemon.id}\r\n            name={pokemon.name}\r\n            type={pokemon.types[0].type.name}\r\n            sprite={pokemon.sprites.other[\"official-artwork\"].front_default}\r\n          />\r\n          <PokemonDetailProfile {...pokemon} />\r\n        </S.PokemonDetailPage>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  }, [pokemon]);\r\n\r\n  return <Layout>{loading ? <Spinner /> : pokemonItem}</Layout>;\r\n};\r\n\r\nexport default PokemonDetailPage;\r\n","import { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport PokemonsListPage from \"./pages/PokemonsListPage\";\r\nimport PokemonDetailPage from \"./pages/PokemonDetailPage\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={PokemonsListPage} />\r\n        <Route exact path=\"/pokemon/:id\" component={PokemonDetailPage} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./features/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}